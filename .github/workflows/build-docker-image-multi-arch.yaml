name: Dockerhub push AMD64 

on:
  push:
    branches:
      - 'main'
  
jobs:
  build-amd:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
    
    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        build-args: DOCKER_TAG=focal
        outputs: type=docker,dest=/tmp/amd-image.tar
        tags: husarion/ros2-desktop-vnc:amd64
        cache-from: type=registry,ref=husarion/ros2-desktop-vnc-amd64
        cache-to: type=inline
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: amd-image
        path: /tmp/amd-image.tar

  build-arm:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
    
    - name: Login to Docker Registry
      uses: docker/login-action@v1
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
          
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/arm64
        build-args: DOCKER_TAG=focal-arm64
        outputs: type=docker,dest=/tmp/arm-image.tar
        tags: husarion/ros2-desktop-vnc:arm64
        cache-from: type=registry,ref=husarion/ros2-desktop-vnc-arm64
        cache-to: type=inline
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: arm-image
        path: /tmp/arm-image.tar
  
  push_manifest:
    runs-on: ubuntu-18.04
    needs: [build-arm, build-amd]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: arm-image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/arm-image.tar

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: amd-image
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/amd-image.tar
          
      - name: create manifest 
        run: docker manifest create husarion/ros2-desktop-vnc:latest --amend husarion/ros2-desktop-vnc:arm64 --amend husarion/ros2-desktop-vnc:amd64 --insecure
      - name: push manifest
        run: docker manifest push husarion/ros2-desktop-vnc:latest